Parameters:
  ProjectName:
    Type: String
    Description: Name of the project this belongs to
  VPCStackName:
    Type: String
    Description: The name of the VPC Stack
  Region:
    Type: String
    Description: Region

Resources:
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/DeveloperBoundary"
      RoleName: "ehrmantraut-bastion"
      Tags:
        - Key: Project
          Value: !Ref ProjectName
      AssumeRolePolicyDocument:
        {
          "Version": "2012-10-17",
          "Statement": [
          {
            "Sid": "",
            "Effect": "Allow",
            "Principal": {
              "Service": "ec2.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
          ]
        }
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Join ['', [!Ref 'Region', 'a']]
      ImageId: ami-0c115dbd34c69a004
      InstanceType: "t2.micro"
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      SubnetId:
        Fn::ImportValue:
          !Join ['-', [!Ref 'VPCStackName', 'PrivateSubnet1']]
      Tags:
        - Key: "Name"
          Value: "bastion"
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic out
      VpcId:
        Fn::ImportValue:
          !Join ['-', [!Ref 'VPCStackName', 'VPC']]
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0